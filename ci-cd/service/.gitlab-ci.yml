include:
  - project: 'theprojectname-network/aws-core-deployment-roles'
    ref: main
    file: '/gitlab-templates/trunk-based-pipeline-k8s-ci.yaml'
  - project: 'theprojectname-network/aws-core-deployment-roles'
    ref: main
    file: '/gitlab-templates/trunk-based-k8s-ci.yaml'


variables:
  SERVICE: asset
  SETTINGS__GITLAB_ACCESS_TOKEN: $DEPENDABOT_GITLAB_TOKEN
  PHP_VERSION: "8.2"

stages:
  - test
  - image_build
  - deploy
  - tag
  - deploy_prod


test-laravel-applications:
  extends: .test-laravel-applications
  variables:
    PHP_VERSION: "8.2"
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'main'

build-push-images-dev:
  extends: .build-push-images
  parallel:
    matrix:
      - APP_NAME: [ "webserver", "fpm", "cli", "cron" ]
  stage: image_build
  variables:
    SERVICE: asset
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_NAME == "main"'

deploy-to-dev:
  extends: .deploy-app
  stage: deploy
  variables:
    SERVICE: asset
  rules:
    - if: $CI_COMMIT_BRANCH =~ /main/

build-push-images-stage:
  extends: .build-push-images
  parallel:
    matrix:
      - APP_NAME: [ "webserver", "fpm", "cli", "cron" ]
  variables:
    SERVICE: asset
  stage: image_build
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /^release\//'

deploy-to-stage:
  extends: .deploy-app
  stage: deploy
  variables:
    SERVICE: asset
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /^release\//'

set-tag:
  extends: .set-tag
  variables:
    SERVICE: asset
  stage: tag
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH =~ /^release\//'

deploy-to-prod:
  extends: .deploy-app
  stage: deploy_prod
  variables:
    SERVICE: asset
  after_script:
    - |
      if [ $CI_JOB_STATUS != 'success' ]; then
        apk add --no-cache bash curl git
        git config --global user.name "Gitlab Runner"
        git config --global user.email "gitlab@theprojectname.dev"
        CI_URL=$(echo $CI_REPOSITORY_URL | awk -F/ '{print $NF}')
        git remote set-url origin "https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/theprojectname-network/$CI_URL"
        TAG_TO_REMOVE=$( git describe --exact-match $CI_COMMIT_SHORT_SHA | sort -V | tail -n1 )
        git push --delete origin $TAG_TO_REMOVE
      fi
  rules:
    - if: '$CI_COMMIT_TAG'
      when: manual
